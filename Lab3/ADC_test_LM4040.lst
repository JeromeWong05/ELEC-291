0000              1   ; 76E003 ADC test program: Reads channel 7 on P1.1, pin 14
0000              2   ; This version uses the LM4040 voltage reference connected to pin 6 (P1.7/AIN0)
0000              3   
                  5   $LIST
0000              7   
0000              8   ;  N76E003 pinout:
0000              9   ;                               -------
0000             10   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000             11   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000             12   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             13   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             14   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             15   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             16   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             17   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             18   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             19   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             20   ;                               -------
0000             21   ;
0000             22   
0000             23   CLK               EQU 16600000 ; Microcontroller system frequency in Hz
0000             24   BAUD              EQU 115200 ; Baud rate of UART in bps
0000             25   TIMER1_RELOAD     EQU (0x100-(CLK/(16*BAUD)))
0000             26   TIMER0_RELOAD_1MS EQU (0x10000-(CLK/1000))
0000             27   
0000             28   ORG 0x0000
0000 020400      29            ljmp main
0003             30   
0003             31   ;                     1234567890123456    <- This helps determine the location of the counter
0003 2A2A2A20    32   test_message:     db '*** ADC TEST ***', 0
     41444320
     54455354
     202A2A2A
     00
0014 56287069    33   value_message:    db 'V(pin 14)=      ', 0
     6E203134
     293D2020
     20202020
     00
0025             34   cseg
0025             35   ; These 'equ' must match the hardware wiring
0025             36   LCD_RS equ P1.3
0025             37   LCD_E  equ P1.4
0025             38   LCD_D4 equ P0.0
0025             39   LCD_D5 equ P0.1
0025             40   LCD_D6 equ P0.2
0025             41   LCD_D7 equ P0.3
0025             42   
                 44   	$LIST
00D9             46   
00D9             47   ; These register definitions needed by 'math32.inc'
0030             48   DSEG at 30H
0030             49   x:   ds 4
0034             50   y:   ds 4
0038             51   bcd: ds 5
003D             52   VAL_LM4040: ds 2
003F             53   
0000             54   BSEG
0000             55   mf: dbit 1
0001             56   
                546   $LIST
                 58   $LIST
0349             60   
0349             61   Init_All:
0349             62            ; Configure all the pins for biderectional I/O
0349 75AC00      63            mov     P3M1, #0x00
034C 75AD00      64            mov     P3M2, #0x00
034F 75B300      65            mov     P1M1, #0x00
0352 75B400      66            mov     P1M2, #0x00
0355 75B100      67            mov     P0M1, #0x00
0358 75B200      68            mov     P0M2, #0x00
035B             69            
035B 438E10      70            orl     CKCON, #0x10 ; CLK is the input for timer 1
035E 438780      71            orl     PCON, #0x80 ; Bit SMOD=1, double baud rate
0361 759852      72            mov     SCON, #0x52 ; configure to mode 1 
0364 53C4DF      73            anl     T3CON, #0b11011111
0367 53890F      74            anl     TMOD, #0x0F ; Clear the configuration bits for timer 1
036A 438920      75            orl     TMOD, #0x20 ; Timer 1 Mode 2
036D 758DF7      76            mov     TH1, #TIMER1_RELOAD ; TH1=TIMER1_RELOAD;
0370 D28E        77            setb TR1
0372             78            
0372             79            ; Using timer 0 for delay functions.  Initialize here:
0372 C28C        80            clr     TR0 ; Stop timer 0
0374 438E08      81            orl     CKCON,#0x08 ; CLK is the input for timer 0
0377 5389F0      82            anl     TMOD,#0xF0 ; Clear the configuration bits for timer 0
037A 438901      83            orl     TMOD,#0x01 ; Timer 0 in Mode 1: 16-bit timer
037D             84            
037D             85            ; Initialize the pins used by the ADC (P1.1, P1.7) as input.
037D 43B382      86            orl     P1M1, #0b10000010
0380 53B47D      87            anl     P1M2, #0b01111101
0383             88            
0383             89            ; Initialize and start the ADC:
0383 53E8F0      90            anl ADCCON0, #0xF0
0386 43E807      91            orl ADCCON0, #0x07 ; Select channel 7
0389             92            ; AINDIDS select if some pins are analog inputs or digital I/O:
0389             93            ;mov AINDIDS, #0x00 ; Disable all analog inputs
0389             94            ;orl AINDIDS, #0b10000001 ; Activate AIN0 and AIN7 analog inputs
0389 43E101      95            orl ADCCON1, #0x01 ; Enable ADC
038C             96            
038C 22          97            ret
038D             98            
038D             99   wait_1ms:
038D C28C       100            clr     TR0 ; Stop timer 0
038F C28D       101            clr     TF0 ; Clear overflow flag
0391 758CBF     102            mov     TH0, #high(TIMER0_RELOAD_1MS)
0394 758A28     103            mov     TL0,#low(TIMER0_RELOAD_1MS)
0397 D28C       104            setb TR0
0399 308DFD     105            jnb     TF0, $ ; Wait for overflow
039C 22         106            ret
039D            107   
039D            108   ; Wait the number of miliseconds in R2
039D            109   waitms:
039D 12038D     110            lcall wait_1ms
03A0 DAFB       111            djnz R2, waitms
03A2 22         112            ret
03A3            113   
03A3            114   ; We can display a number any way we want.  In this case with
03A3            115   ; four decimal places.
03A3            116   Display_formated_BCD:
03A3 C0E0       117            push acc
03A5 740A       117            mov a, #10
03A7 14         117            dec a
03A8 1200BC     117            lcall ?Set_Cursor_2 ; Select column and row
03AB D0E0       117            pop acc
03AD C000       118            push ar0
03AF A83A       118            mov r0, bcd+2
03B1 1200C3     118            lcall ?Display_BCD
03B4 D000       118            pop ar0
03B6 C0E0       119            push acc
03B8 742E       119            mov a, #'.'
03BA 120074     119            lcall ?WriteData
03BD D0E0       119            pop acc
03BF C000       120            push ar0
03C1 A839       120            mov r0, bcd+1
03C3 1200C3     120            lcall ?Display_BCD
03C6 D000       120            pop ar0
03C8 C000       121            push ar0
03CA A838       121            mov r0, bcd+0
03CC 1200C3     121            lcall ?Display_BCD
03CF D000       121            pop ar0
03D1 C0E0       122            push acc
03D3 740A       122            mov a, #10
03D5 14         122            dec a
03D6 1200BC     122            lcall ?Set_Cursor_2 ; Select column and row
03D9 D0E0       122            pop acc
03DB C0E0       123            push acc
03DD 743D       123            mov a, #'='
03DF 120074     123            lcall ?WriteData
03E2 D0E0       123            pop acc
03E4 22         124            ret
03E5            125   
03E5            126   Read_ADC:
03E5 C2EF       127            clr ADCF
03E7 D2EE       128            setb ADCS ;  ADC start trigger signal
03E9 30EFFD     129       jnb ADCF, $ ; Wait for conversion complete
03EC            130       
03EC            131       ; Read the ADC result and store in [R1, R0]
03EC E5C2       132       mov a, ADCRL
03EE 540F       133       anl a, #0x0f
03F0 F8         134       mov R0, a
03F1 E5C3       135       mov a, ADCRH   
03F3 C4         136       swap a
03F4 C0E0       137       push acc
03F6 540F       138       anl a, #0x0f
03F8 F9         139       mov R1, a
03F9 D0E0       140       pop acc
03FB 54F0       141       anl a, #0xf0
03FD 48         142       orl a, R0
03FE F8         143       mov R0, A
03FF 22         144            ret
0400            145   
0400            146   main:
0400 75817F     147            mov sp, #0x7f
0403 120349     148            lcall Init_All
0406 12007E     149       lcall LCD_4BIT
0409            150       
0409            151       ; initial messages in LCD
0409 C0E0       152            push acc
040B 7401       152            mov a, #1
040D 14         152            dec a
040E 1200BE     152            lcall ?Set_Cursor_1 ; Select column and row
0411 D0E0       152            pop acc
0413 C083       153            push dph
0415 C082       153            push dpl
0417 C0E0       153            push acc
0419 900003     153            mov dptr, #test_message
041C 1200B1     153            lcall ?Send_Constant_String
041F D0E0       153            pop acc
0421 D082       153            pop dpl
0423 D083       153            pop dph
0425 C0E0       154            push acc
0427 7401       154            mov a, #1
0429 14         154            dec a
042A 1200BC     154            lcall ?Set_Cursor_2 ; Select column and row
042D D0E0       154            pop acc
042F C083       155            push dph
0431 C082       155            push dpl
0433 C0E0       155            push acc
0435 900014     155            mov dptr, #value_message
0438 1200B1     155            lcall ?Send_Constant_String
043B D0E0       155            pop acc
043D D082       155            pop dpl
043F D083       155            pop dph
0441            156       
0441            157   Forever:
0441            158   
0441            159            ; Read the 2.08V LM4040 voltage connected to AIN0 on pin 6
0441            160            ;anl ADCCON0, #0xF0
0441            161            ;orl ADCCON0, #0x00 ; Select channel 0
0441            162   
0441            163            ;lcall Read_ADC
0441            164            ; Save result for later use
0441            165            ;mov VAL_LM4040+0, R0
0441            166            ;mov VAL_LM4040+1, R1
0441            167   
0441            168            ; Read the signal connected to AIN7
0441 53E8F0     169            anl ADCCON0, #0xF0
0444 43E807     170            orl ADCCON0, #0x07 ; Select channel 7
0447 1203E5     171            lcall Read_ADC
044A            172       
044A            173       ; Convert to voltage
044A 8830       174            mov x+0, R0
044C 8931       175            mov x+1, R1
044E            176            ; Pad other bits with zero
044E 753200     177            mov x+2, #0
0451 753300     178            mov x+3, #0
0454 7534B4     179            mov y+0, #low (50100 % 0x10000) 
0457 7535C3     179            mov y+1, #high(50100 % 0x10000) 
045A 753600     179            mov y+2, #low (50100 / 0x10000) 
045D 753700     179            mov y+3, #high(50100 / 0x10000)  ; The MEASURED voltage reference: 4.0959V, with 4 decimal places
0460 120253     180            lcall mul32
0463            181            ; Retrive the ADC LM4040 value
0463            182            ;mov y+0, VAL_LM4040+0
0463            183            ;mov y+1, VAL_LM4040+1
0463            184            ; Pad other bits with zero
0463            185            ;mov y+2, #0
0463            186            ;mov y+3, #0
0463 7534FF     187            mov y+0, #low (4095 % 0x10000) 
0466 75350F     187            mov y+1, #high(4095 % 0x10000) 
0469 753600     187            mov y+2, #low (4095 / 0x10000) 
046C 753700     187            mov y+3, #high(4095 / 0x10000) 
046F 1202E0     188            lcall div32
0472            189   
0472            190            ; Convert to BCD and display
0472 1200D9     191            lcall hex2bcd
0475 1203A3     192            lcall Display_formated_BCD
0478            193            
0478            194            ; Wait 500 ms between conversions
0478 7AFA       195            mov R2, #250
047A 12039D     196            lcall waitms
047D 7AFA       197            mov R2, #250
047F 12039D     198            lcall waitms
0482            199            
0482 020441     200            ljmp Forever
0485            201   END
