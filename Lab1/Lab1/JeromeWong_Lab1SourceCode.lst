0000              1   ; LCD_test_4bit.asm: Initializes and uses an LCD in 4-bit mode
0000              2   ; using the most common procedure found on the internet and datasheets.
                  4   $LIST
0000              6   
0000              7   org 0000H
0000 0201F5       8       ljmp myprogram
0003              9   
0003             10   ;  N76E003 pinout:
0003             11   ;                               -------
0003             12   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0003             13   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0003             14   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0003             15   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0003             16   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0003             17   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0003             18   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0003             19   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0003             20   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0003             21   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0003             22   ;                               -------
0003             23   ;
0003             24   
0003             25   ; These 'equ' must match the hardware wiring
0003             26   LCD_RS equ P1.3
0003             27   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
0003             28   LCD_E  equ P1.4
0003             29   LCD_D4 equ P0.0
0003             30   LCD_D5 equ P0.1
0003             31   LCD_D6 equ P0.2
0003             32   LCD_D7 equ P0.3
0003             33   
0003             34   ; When using a 16.6MHz oscillator in the N76E003
0003             35   ; one cycle takes 1.0/16.6MHz = 60.24 ns
0003             36   
0003             37   ;---------------------------------;
0003             38   ; Wait 40 microseconds            ;
0003             39   ;---------------------------------;
0003             40   Wait40uSec:
0003 C000        41       push AR0
0005 7885        42       mov R0, #133
0007             43   L0:
0007 00          44       nop
0008 D8FD        45       djnz R0, L0 ; 1+4 cycles->5*60.24ns*133=40us
000A D000        46       pop AR0
000C 22          47       ret
000D             48   
000D             49   ;---------------------------------;
000D             50   ; Wait 'R2' milliseconds          ;
000D             51   ;---------------------------------;
000D             52   WaitmilliSec:
000D C000        53       push AR0
000F C001        54       push AR1
0011 7928        55   L3: mov R1, #40
0013 7868        56   L2: mov R0, #104
0015 D8FE        57   L1: djnz R0, L1 ; 4 cycles->4*60.24ns*104=25.0us
0017 D9FA        58       djnz R1, L2 ; 25us*40=1.0ms
0019 DAF6        59       djnz R2, L3 ; number of millisecons to wait passed in R2
001B D001        60       pop AR1
001D D000        61       pop AR0
001F 22          62       ret
0020             63   
0020             64   ;---------------------------------;
0020             65   ; Wait Half seconds               ;
0020             66   ;---------------------------------;
0020             67   WaitHalfSec:
0020 7A64        68   mov R2, #100
0022 79C8        69   Label3: mov R1, #200
0024 7868        70   Label2: mov R0, #104
0026 D8FE        71   Label1: djnz R0, Label1 ; 4 cycles->4*60.24ns*104=25us
0028 D9FA        72   djnz R1, Label2 ; 25us*200=5.0ms
002A DAF6        73   djnz R2, Label3 ; 5.0ms*100=0.5s (approximately)
002C 22          74   ret
002D             75   
002D             76   ;---------------------------------;
002D             77   ; Toggles the LCD's 'E' pin       ;
002D             78   ;---------------------------------;
002D             79   LCD_pulse:
002D D294        80       setb LCD_E
002F 120003      81       lcall Wait40uSec
0032 C294        82       clr LCD_E
0034 22          83       ret
0035             84   
0035             85   ;---------------------------------;
0035             86   ; Writes data to LCD              ;
0035             87   ;---------------------------------;
0035             88   WriteData:
0035 D293        89       setb LCD_RS
0037 02003F      90       ljmp LCD_byte
003A             91   
003A             92   ;---------------------------------;
003A             93   ; Writes command to LCD           ;
003A             94   ;---------------------------------;
003A             95   WriteCommand:
003A C293        96       clr LCD_RS
003C 02003F      97       ljmp LCD_byte
003F             98   
003F             99   ;---------------------------------;
003F            100   ; Writes acc to LCD in 4-bit mode ;
003F            101   ;---------------------------------;
003F            102   LCD_byte:
003F            103       ; Write high 4 bits first
003F A2E7       104       mov c, ACC.7
0041 9283       105       mov LCD_D7, c
0043 A2E6       106       mov c, ACC.6
0045 9282       107       mov LCD_D6, c
0047 A2E5       108       mov c, ACC.5
0049 9281       109       mov LCD_D5, c
004B A2E4       110       mov c, ACC.4
004D 9280       111       mov LCD_D4, c
004F 12002D     112       lcall LCD_pulse
0052            113   
0052            114       ; Write low 4 bits next
0052 A2E3       115       mov c, ACC.3
0054 9283       116       mov LCD_D7, c
0056 A2E2       117       mov c, ACC.2
0058 9282       118       mov LCD_D6, c
005A A2E1       119       mov c, ACC.1
005C 9281       120       mov LCD_D5, c
005E A2E0       121       mov c, ACC.0
0060 9280       122       mov LCD_D4, c
0062 12002D     123       lcall LCD_pulse
0065 22         124       ret
0066            125   
0066            126   ;---------------------------------;
0066            127   ; Configure LCD in 4-bit mode     ;
0066            128   ;---------------------------------;
0066            129   LCD_4BIT:
0066 C294       130       clr LCD_E   ; Resting state of LCD's enable is zero
0068            131       ; clr LCD_RW  ; Not used, pin tied to GND
0068            132   
0068            133       ; After power on, wait for the LCD start up time before initializing
0068 7A28       134       mov R2, #40
006A 12000D     135       lcall WaitmilliSec
006D            136   
006D            137       ; First make sure the LCD is in 8-bit mode and then change to 4-bit mode
006D 7433       138       mov a, #0x33
006F 12003A     139       lcall WriteCommand
0072 7433       140       mov a, #0x33
0074 12003A     141       lcall WriteCommand
0077 7432       142       mov a, #0x32 ; change to 4-bit mode
0079 12003A     143       lcall WriteCommand
007C            144   
007C            145       ; Configure the LCD
007C 7428       146       mov a, #0x28
007E 12003A     147       lcall WriteCommand
0081 740C       148       mov a, #0x0c
0083 12003A     149       lcall WriteCommand
0086 7401       150       mov a, #0x01 ;  Clear screen command (takes some time)
0088 12003A     151       lcall WriteCommand
008B            152   
008B            153       ;Wait for clear screen command to finish. Usually takes 1.52ms.
008B 7A02       154       mov R2, #2
008D 12000D     155       lcall WaitmilliSec
0090 22         156       ret
0091            157   
0091            158   
0091            159   smileyface:
0091            160   
0091 7440       161       mov A, #40H
0093 12003A     162       lcall WriteCommand
0096 741B       163       mov A, #11011B
0098 120035     164       lcall WriteData
009B 7403       165       mov A, #00011B
009D 120035     166       lcall WriteData
00A0 7403       167       mov A, #00011B
00A2 120035     168       lcall WriteData
00A5 740F       169       mov A, #01111B
00A7 120035     170       lcall WriteData
00AA 741E       171       mov A, #11110B
00AC 120035     172       lcall WriteData
00AF 741C       173       mov A, #11100B
00B1 120035     174       lcall WriteData
00B4 7418       175       mov A, #11000B
00B6 120035     176       lcall WriteData
00B9 7410       177       mov A, #10000B
00BB 120035     178       lcall WriteData
00BE            179   
00BE 7448       180       mov A, #48H
00C0 12003A     181       lcall WriteCommand
00C3 7401       182       mov A, #00001B
00C5 120035     183       lcall WriteData
00C8 7403       184       mov A, #00011B
00CA 120035     185       lcall WriteData
00CD 7407       186       mov A, #00111B
00CF 120035     187       lcall WriteData
00D2 740E       188       mov A, #01110B
00D4 120035     189       lcall WriteData
00D7 741E       190       mov A, #11110B
00D9 120035     191       lcall WriteData
00DC 741F       192       mov A, #11111B
00DE 120035     193       lcall WriteData
00E1 741F       194       mov A, #11111B
00E3 120035     195       lcall WriteData
00E6 741F       196       mov A, #11111B
00E8 120035     197       lcall WriteData
00EB            198   
00EB 7450       199       mov A, #50H
00ED 12003A     200       lcall WriteCommand
00F0 741F       201       mov A, #11111B
00F2 120035     202       lcall WriteData
00F5 741F       203       mov A, #11111B
00F7 120035     204       lcall WriteData
00FA 741F       205       mov A, #11111B
00FC 120035     206       lcall WriteData
00FF 740E       207       mov A, #01110B
0101 120035     208       lcall WriteData
0104 740E       209       mov A, #01110B
0106 120035     210       lcall WriteData
0109 741F       211       mov A, #11111B
010B 120035     212       lcall WriteData
010E 741F       213       mov A, #11111B
0110 120035     214       lcall WriteData
0113 741F       215       mov A, #11111B
0115 120035     216       lcall WriteData
0118            217   
0118 7458       218       mov A, #58H
011A 12003A     219       lcall WriteCommand
011D 7410       220       mov A, #10000B
011F 120035     221       lcall WriteData
0122 7418       222       mov A, #11000B
0124 120035     223       lcall WriteData
0127 741C       224       mov A, #11100B
0129 120035     225       lcall WriteData
012C 740E       226       mov A, #01110B
012E 120035     227       lcall WriteData
0131 740F       228       mov A, #01111B
0133 120035     229       lcall WriteData
0136 741F       230       mov A, #11111B
0138 120035     231       lcall WriteData
013B 741F       232       mov A, #11111B
013D 120035     233       lcall WriteData
0140 741F       234       mov A, #11111B
0142 120035     235       lcall WriteData
0145            236   
0145 7460       237       mov A, #60H
0147 12003A     238       lcall WriteCommand
014A 741B       239       mov A, #11011B
014C 120035     240       lcall WriteData
014F 7418       241       mov A, #11000B
0151 120035     242       lcall WriteData
0154 741C       243       mov A, #11100B
0156 120035     244       lcall WriteData
0159 741E       245       mov A, #11110B
015B 120035     246       lcall WriteData
015E 740F       247       mov A, #01111B
0160 120035     248       lcall WriteData
0163 7407       249       mov A, #00111B
0165 120035     250       lcall WriteData
0168 7403       251       mov A, #00011B
016A 120035     252       lcall WriteData
016D 7401       253       mov A, #00001B
016F 120035     254       lcall WriteData
0172            255   
0172 7468       256       mov A, #68H
0174 12003A     257       lcall WriteCommand
0177 741F       258       mov A, #11111B
0179 120035     259       lcall WriteData
017C 7400       260       mov A, #00000B
017E 120035     261       lcall WriteData
0181 7400       262       mov A, #00000B
0183 120035     263       lcall WriteData
0186 7400       264       mov A, #00000B
0188 120035     265       lcall WriteData
018B 7400       266       mov A, #00000B
018D 120035     267       lcall WriteData
0190 741F       268       mov A, #11111B
0192 120035     269       lcall WriteData
0195 741F       270       mov A, #11111B
0197 120035     271       lcall WriteData
019A 741F       272       mov A, #11111B
019C 120035     273       lcall WriteData
019F            274   
019F            275       ; the new face for winking 
019F            276   
019F 7470       277       mov A, #70H
01A1 12003A     278       lcall WriteCommand 
01A4 741F       279       mov A, #11111B
01A6 120035     280       lcall WriteData
01A9 741F       281       mov A, #11111B
01AB 120035     282       lcall WriteData
01AE 741E       283       mov A, #11110B
01B0 120035     284       lcall WriteData
01B3 740D       285       mov A, #01101B
01B5 120035     286       lcall WriteData
01B8 740D       287       mov A, #01101B
01BA 120035     288       lcall WriteData
01BD 741E       289       mov A, #11110B
01BF 120035     290       lcall WriteData
01C2 741F       291       mov A, #11111B
01C4 120035     292       lcall WriteData
01C7 741F       293       mov A, #11111B
01C9 120035     294       lcall WriteData
01CC            295   
01CC 7410       296       mov A, #10000B
01CE 120035     297       lcall WriteData
01D1 7418       298       mov A, #11000B
01D3 120035     299       lcall WriteData
01D6 741C       300       mov A, #11100B
01D8 120035     301       lcall WriteData
01DB 741E       302       mov A, #11110B
01DD 120035     303       lcall WriteData
01E0 741F       304       mov A, #11111B
01E2 120035     305       lcall WriteData
01E5 741F       306       mov A, #11111B
01E7 120035     307       lcall WriteData
01EA 741F       308       mov A, #11111B
01EC 120035     309       lcall WriteData
01EF 741F       310       mov A, #11111B
01F1 120035     311       lcall WriteData
01F4            312   
01F4 22         313       ret
01F5            314   
01F5            315   
01F5            316   
01F5            317   
01F5            318   myprogram:
01F5 75817F     319       mov SP, #7FH
01F8 75B100     320       mov P0M1, #0x00
01FB 75B200     321       mov P0M2, #0x00
01FE 75B300     322       mov P1M1, #0x00
0201 75B400     323       mov P1M2, #0x00
0204 120066     324       lcall LCD_4BIT
0207 120091     325       lcall smileyface
020A            326   
020A            327       ;displaying the face on the left side 
020A            328   
020A 7480       329       mov A, #80H
020C 12003A     330       lcall WriteCommand
020F 7401       331       mov A, #1
0211 120035     332       lcall WriteData
0214            333   
0214 74C0       334       mov A, #0C0H
0216 12003A     335       lcall WriteCommand
0219 7404       336       mov A, #4
021B 120035     337       lcall WriteData
021E            338   
021E 74C1       339       mov A, #0C1H
0220 12003A     340       lcall WriteCommand
0223 7405       341       mov A, #5
0225 120035     342       lcall WriteData
0228            343   
0228 74C2       344       mov A, #0C2H
022A 12003A     345       lcall WriteCommand
022D 7400       346       mov A, #0
022F 120035     347       lcall WriteData
0232            348   
0232            349       ;other side of the face 
0232            350   
0232 748D       351       mov A, #8DH
0234 12003A     352       lcall WriteCommand
0237 7401       353       mov A, #1
0239 120035     354       lcall WriteData
023C            355       
023C 748E       356       mov A, #8EH
023E 12003A     357       lcall WriteCommand
0241 7402       358       mov A, #2
0243 120035     359       lcall WriteData
0246            360   
0246 748F       361       mov A, #8FH
0248 12003A     362       lcall WriteCommand
024B 7403       363       mov A, #3
024D 120035     364       lcall WriteData
0250            365   
0250 74CD       366       mov A, #0CDH
0252 12003A     367       lcall WriteCommand
0255 7404       368       mov A, #4
0257 120035     369       lcall WriteData
025A            370   
025A 74CE       371       mov A, #0CEH
025C 12003A     372       lcall WriteCommand
025F 7405       373       mov A, #5
0261 120035     374       lcall WriteData
0264            375   
0264 74CF       376       mov A, #0CFH
0266 12003A     377       lcall WriteCommand
0269 7400       378       mov A, #0
026B 120035     379       lcall WriteData
026E            380   
026E            381   loop: 
026E 1202D1     382       lcall winkingface 
0271            383       
0271 7483       384       mov A, #083H 
0273 12003A     385       lcall WriteCommand
0276 900330     386       mov DPTR, #name
0279 12028C     387       lcall DisplayString
027C            388   
027C 74C4       389       mov A, #0C4H 
027E 12003A     390       lcall WriteCommand
0281 90033B     391       mov DPTR, #studentnumber 
0284 12028C     392       lcall DisplayString 
0287            393   
0287 1202A6     394       lcall Dissolve
028A 80E2       395       sjmp loop 
028C            396   
028C            397   
028C            398   DisplayString:
028C C000       399       push AR0
028E C001       400       push AR1
0290 7800       401       mov R0, #0             
0292            402   NextChar:
0292 E8         403       mov A, R0
0293 93         404       movc A, @A+DPTR        
0294 600B       405       jz EndDisplay          
0296 120035     406       lcall WriteData       
0299 7A64       407       mov R2, #100         
029B 12000D     408       lcall WaitmilliSec
029E A3         409       inc DPTR              
029F 80F1       410       sjmp NextChar        
02A1            411   EndDisplay:
02A1 D001       412       pop AR1
02A3 D000       413       pop AR0
02A5 22         414       ret
02A6            415   
02A6            416   
02A6            417   Dissolve:
02A6 C000       418       push AR0 
02A8 7483       419       mov A, #083H
02AA 12003A     420       lcall WriteCommand
02AD 780A       421       mov R0, #10
02AF            422   ClearLoop1:
02AF 7420       423       mov A, #' '
02B1 120035     424       lcall WriteData
02B4 7A64       425       mov R2, #100
02B6 12000D     426       lcall WaitmilliSec
02B9 D8F4       427       djnz R0, ClearLoop1
02BB            428   
02BB 74C3       429       mov A, #0C3H
02BD 12003A     430       lcall WriteCommand
02C0 780A       431       mov R0, #10
02C2            432   ClearLoop2:
02C2 7420       433       mov A, #' '
02C4 120035     434       lcall WriteData
02C7 7A64       435       mov R2, #100
02C9 12000D     436       lcall WaitmilliSec
02CC D8F4       437       djnz R0, ClearLoop2
02CE            438   
02CE D000       439       pop AR0
02D0 22         440       ret
02D1            441   
02D1            442   winkingface:
02D1            443   
02D1 7481       444       mov A, #81H
02D3 12003A     445       lcall WriteCommand
02D6 7406       446       mov A, #6
02D8 120035     447       lcall WriteData
02DB            448   
02DB 7482       449       mov A, #82H
02DD 12003A     450       lcall WriteCommand
02E0 7407       451       mov A, #7
02E2 120035     452       lcall WriteData
02E5            453   
02E5 120020     454       lcall WaitHalfSec
02E8            455   
02E8 7481       456       mov A, #81H
02EA 12003A     457       lcall WriteCommand
02ED 7402       458       mov A, #2
02EF 120035     459       lcall WriteData
02F2            460   
02F2 7482       461       mov A, #82H
02F4 12003A     462       lcall WriteCommand
02F7 7403       463       mov A, #3
02F9 120035     464       lcall WriteData
02FC            465   
02FC 120020     466       lcall WaitHalfSec
02FF            467   
02FF 748E       468       mov A, #8EH
0301 12003A     469       lcall WriteCommand
0304 7406       470       mov A, #6
0306 120035     471       lcall WriteData
0309            472   
0309 748F       473       mov A, #8FH
030B 12003A     474       lcall WriteCommand
030E 7407       475       mov A, #7
0310 120035     476       lcall WriteData
0313            477   
0313 120020     478       lcall WaitHalfSec 
0316            479   
0316 748E       480       mov A, #8EH
0318 12003A     481       lcall WriteCommand
031B 7402       482       mov A, #2
031D 120035     483       lcall WriteData
0320            484   
0320 748F       485       mov A, #8FH
0322 12003A     486       lcall WriteCommand
0325 7403       487       mov A, #3
0327 120035     488       lcall WriteData
032A            489   
032A 120020     490       lcall WaitHalfSec
032D 22         491       ret 
032E            492   
032E            493   
032E            494   
032E            495   forever:
032E 80FE       496       sjmp forever
0330            497   
0330            498   
0330            499   name: 
0330 4A65726F   500       db 'JeromeWong', 0 
     6D65576F
     6E6700
033B            501   
033B            502   studentnumber: 
033B 38393931   503       db '89917579', 0
     37353739
     00
0344            504   
0344            505   END
